!function(){var e={picker:"$/proton/multi-list-picker/picker.html"},i=angular.module("proton.multi-list-picker",[]);i.run(["$templateCache",function(i){i.put(e.picker,"<div class='proton-multi-list-picker'>\n    <span ng-transclude class='proton-multi-list-picker-contents'></span>\n    <div class='before'></div>\n    <ul class='lists'>\n        <li ng-repeat='list in items track by $index'>\n            <span class='divider' ng-if='list.$divider' ng-bind='list.$divider'></span>\n            <ul class='list' ng-if='!list.$divider' ng-init='cached = (list.source() | protonMultiListArrayOf); view = (cached | protonMultiListView:selected(list.alias, cached));'>\n                <li ng-repeat='item in view'><span ng-bind='item.label'></span></li>\n            </ul>\n        </li>\n    </ul>\n</div>")}]),i.directive("protonMultiListPicker",["$parse","$filter",function(i,t){return{restrict:"E",templateUrl:e.picker,require:"?ngModel",controllerAs:"controller",scope:{},transclude:!0,controller:["$scope",function(e){e.items=[],this.addDivider=function(i){e.items.push({$divider:i})},this.add=function(i){i.alias||(i.alias=e.items.length),e.items.push(i)}}],link:function(e,n,l,r){var a=(e.controller,n.parent().scope());e.attachment="bottom",l.$observe("attachment",function(i){e.attachment=i||"bottom"}),e.model=null,e.$watch(function(){return i(l.ngModel)(a)},function(i){e.model=i,angular.forEach(e.items,function(n){n.alias&&angular.isUndefined(i[n.alias])&&e.select(n.alias,t("protonMultiListArrayOf")(n.source()),0)})},!0),e.label=function(e,i){return e.index<=i||0>i?null:angular.isObject(e[i])&&angular.isDefined(e[i].label)?e[i].label:e[i]},e.value=function(e,i){return e.index<=i||0>i?null:angular.isObject(e[i])&&angular.isDefined(e[i].value)?e[i].value:e[i]},e.select=function(i,t,n){e.model[i]=e.value(t,n)},e.selected=function(i,t){var n=e.model[i],l=-1;return angular.forEach(t,function(e,i){l>-1||(angular.isObject(e)&&angular.isDefined(e.value)&&n==e.value&&(l=i),angular.isObject(e)&&angular.isDefined(e.value)||n!=e||(l=i))}),l>-1?l:0}}}}]),i.directive("protonMultiListPickerList",[function(){return{scope:{source:"&?",alias:"@?"},restrict:"E",require:"^protonMultiListPicker",controller:["$scope",function(e){e.items=[],this.add=function(i){e.items.push(i)}}],link:function(e,i,t,n){n.add({source:function(){return e.source&&e.source()||e.items},alias:e.alias})}}}]),i.directive("protonMultiListPickerDivider",[function(){return{restrict:"E",require:"^protonMultiListPicker",link:function(e,i,t,n){n.addDivider(i.html())}}}]),i.directive("protonMultiListPickerListItem",[function(){return{restrict:"E",require:"^protonMultiListPickerList",link:function(e,i,t,n){n.add({value:t.value||i.html(),label:i.html()})}}}]),i.filter("protonMultiListView",[function(){return function(e,i){var t,n=i,l=Math.max(n-3,0),r=Math.min(n+3,e.length-1),a=[];for(t=l;r>=t;t++)a.push({label:e[t].label,value:e[t].value,index:t});var u=0;if(e.length>=7&&a.length<7&&(u=7-a.length,0==l&&(u=-1*u)),0>u)for(t=e.length+u;t<e.length;t++)a.splice(t-e.length-u,0,{label:e[t].label,value:e[t].value,index:t});else if(u>0)for(t=0;u>t;t++)a.push({label:e[t].label,value:e[t].value,index:t});return a}}]),i.filter("protonMultiListArrayOf",[function(){return function(e){var i;return angular.isArray(e)?(i=[],angular.forEach(e,function(e){angular.isObject(e)&&angular.isDefined(e.label)&&angular.isDefined(e.value)?i.push(e):i.push({label:e,value:e})}),i):angular.isObject(e)?(i=[],angular.forEach(e,function(e,t){i.push({value:t,label:e})}),i.sort(function(e,i){return e.label<i.label?-1:1}),i):[e]}}])}();