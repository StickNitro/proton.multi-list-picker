!function(){var e={picker:"$/proton/multi-list-picker/picker.html"},i=angular.module("proton.multi-list-picker",[]);i.run(["$templateCache",function(i){i.put(e.picker,"<div class='proton-multi-list-picker {{attachment}}'>\n    <span ng-transclude class='proton-multi-list-picker-contents'></span>\n    <div class='before'></div>\n    <ul class='lists'>\n        <li ng-repeat='list in items track by $index' class='list-container'>\n            <span class='divider' ng-if='list.$divider'>\n                <span ng-if='!bindHtml' ng-bind='list.$divider'></span>\n                <span ng-if='bindHtml' ng-bind-html='list.$divider'></span>\n            </span>\n            <ul class='list' ng-if='!list.$divider' ng-init='cached = (list.source() | protonMultiListArrayOf); selectedIndex = selected(list.alias, cached); view = (cached | protonMultiListView:selectedIndex);'>\n                <li class='item {{item.index == selectedIndex ? \"selected\" : \"offset-\" + ($index &gt; 3 ? $index - 3 : 3 - $index)}}' ng-repeat='item in view track by $index' ng-swipe-up='swipeUp()'>\n                    <span ng-if='!bindHtml' ng-bind='item.label'></span>\n                    <span ng-if='bindHtml' ng-bind-html='item.label'></span>\n                </li>\n            </ul>\n        </li>\n    </ul>\n    <div class='after'></div>\n</div>")}]),i.directive("protonMultiListPicker",["$parse","$filter",function(i,n){var t=function(e){e.items=[],this.addDivider=function(i){e.items.push({$divider:i})},this.add=function(i){i.alias||(i.alias=e.items.length),e.items.push(i)}};return{restrict:"E",replace:!0,templateUrl:e.picker,require:"?ngModel",controllerAs:"controller",scope:{},transclude:!0,controller:["$scope",t],link:function(e,t,l,r){var a=(e.controller,t.parent().scope());e.attachment="bottom",l.$observe("attachment",function(i){e.attachment=i||"bottom"}),e.bindHtml=!1,l.$observe("bindHtml",function(i){e.bindHtml="true"==i}),e.model=null,e.$watch(function(){return i(l.ngModel)(a)},function(i){e.model=i,angular.forEach(e.items,function(t){t.alias&&angular.isUndefined(i[t.alias])&&e.select(t.alias,n("protonMultiListArrayOf")(t.source()),0)})},!0),e.value=function(e,i){return e.index<=i||0>i?null:e[i].value},e.select=function(i,n,t){e.model[i]=e.value(n,t)},e.selected=function(i,n){var t=e.model[i],l=-1;return angular.forEach(n,function(e,i){l>-1||(angular.isObject(e)&&angular.isDefined(e.value)&&t==e.value&&(l=i),angular.isObject(e)&&angular.isDefined(e.value)||t!=e||(l=i))}),l>-1?l:0},e.swipeUp=function(){console.log("UP")}}}}]),i.directive("protonMultiListPickerList",[function(){var e=function(e){e.items=[],this.add=function(i){e.items.push(i)}};return{scope:{source:"&?",alias:"@?"},restrict:"E",require:"^protonMultiListPicker",controller:["$scope",e],link:function(e,i,n,t){t.add({source:function(){return e.source&&e.source()||e.items},alias:e.alias})}}}]),i.directive("protonMultiListPickerDivider",[function(){return{restrict:"E",require:"^protonMultiListPicker",link:function(e,i,n,t){t.addDivider(i.html())}}}]),i.directive("protonMultiListPickerListItem",[function(){return{restrict:"E",require:"^protonMultiListPickerList",link:function(e,i,n,t){t.add({value:n.value||i.html(),label:i.html()})}}}]),i.filter("protonMultiListView",[function(){return function(e,i){var n,t=i,l=Math.max(t-3,0),r=Math.min(t+3,e.length-1),a=[];for(n=l;r>=n;n++)a.push({label:e[n].label,value:e[n].value,index:n});if(e.length>=7&&a.length<7){var s=7-a.length;if(0==l&&(s=-1*s),0>s)for(n=e.length+s;n<e.length;n++)a.splice(n-e.length-s,0,{label:e[n].label,value:e[n].value,index:n});else if(s>0)for(n=0;s>n;n++)a.push({label:e[n].label,value:e[n].value,index:n})}else if(a.length<7){for(var u=e.length-1;3>t;)a.splice(0,0,e[u]),u--,0>u&&(u=e.length-1),t++;for(u=0;a.length<7;)a.push(e[u]),u++,u==e.length&&(u=0)}return a}}]),i.filter("protonMultiListArrayOf",[function(){return function(e){var i;return angular.isArray(e)?(i=[],angular.forEach(e,function(e){angular.isObject(e)&&angular.isDefined(e.label)&&angular.isDefined(e.value)?i.push(e):i.push({label:e,value:e})}),i):angular.isObject(e)?(i=[],angular.forEach(e,function(e,n){i.push({value:n,label:e})}),i.sort(function(e,i){return e.label<i.label?-1:1}),i):[e]}}])}();